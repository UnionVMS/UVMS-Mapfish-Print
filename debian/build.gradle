apply plugin: 'signing'
configurations {
    jdeb
}

repositories {
    mavenCentral()
    mavenLocal()
}
dependencies {
    jdeb 'org.vafer:jdeb:1.1.1', 'org.bouncycastle:bcpg-jdk15on:1.50'
}


import org.apache.tools.ant.filters.ReplaceTokens
task debianControlFiles(type: Copy) {
    from ("$projectDir/src/control") {
        filter(ReplaceTokens, tokens: [version: version])
    }
    into "$buildDir/control"
}

task debianDataFiles(type: Copy) {
    dependsOn(":core:war")
    from ("$projectDir/src/data") {
        exclude '**/README.rst'
    }
    def war = project(":core").war
    from  file(war.archivePath)
    rename {file ->
        if (file.endsWith(".war")) {
            return "print.war"
        }
        return null;
    }
    into "$buildDir/data"
}


task debian {

    inputs.dir debianDataFiles.destinationDir
    outputs.dir "$buildDir/deb"
    ext.debFile = file("$buildDir/deb/print-war-${version}.deb")
    doLast {
        def keyId = signing_keyId;
        if (keyId.startsWith("0x")) {
            keyId = keyId.substring(2)
        }
        ant.taskdef(name: 'deb', classname: 'org.vafer.jdeb.ant.DebAntTask', classpath: configurations.jdeb.asPath)
        if (!file(signing_secretKeyRingFile).exists()) {
            ant.deb(destfile: debFile,
                    control: "$debianControlFiles.destinationDir",
                    changesIn: "$projectDir/src/changelog",
                    changesOut: "$buildDir/changelog") {
                data(src: "$debianDataFiles.destinationDir", type: 'directory') {
                    mapper(type:"perm", prefix:"/srv/tomcat/tomcat1/webapps/")
                }
            }
        } else {
            ant.deb(destfile: debFile,
                    control: "$debianControlFiles.destinationDir",
                    keyring: signing_secretKeyRingFile,
                    key: keyId,
                    passphrase: signing_password,
                    changesIn: "$projectDir/src/changelog",
                    changesOut: "$buildDir/changelog") {
                data(src: "$debianDataFiles.destinationDir", type: 'directory') {
                    mapper(type:"perm", prefix:"/srv/tomcat/tomcat1/webapps/")
                }
            }
 
            signing.sign(debFile)
       }
    }
}

debian.dependsOn debianControlFiles, debianDataFiles

task build {
    dependsOn debian
}
